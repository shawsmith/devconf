# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = syntax
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/joe/autoconf.h
CONFIG_CLEAN_FILES = 4gl.jsf ada.jsf ant.jsf asm.jsf awk.jsf batch.jsf \
	c.jsf cobol.jsf comment_todo.jsf conf.jsf csharp.jsf csh.jsf \
	css.jsf debian.jsf diff.jsf elixir.jsf erb.jsf erlang.jsf \
	fortran.jsf git-commit.jsf go.jsf haml.jsf haskell.jsf \
	html.jsf htmlerb.jsf ini.jsf iptables.jsf java.jsf joerc.jsf \
	js.jsf jsf_check.jsf jsf.jsf json.jsf lisp.jsf lua.jsf m4.jsf \
	mail.jsf mason.jsf matlab.jsf md.jsf ocaml.jsf pascal.jsf \
	perl.jsf php.jsf powershell.jsf prolog.jsf properties.jsf \
	ps.jsf puppet.jsf python.jsf rexx.jsf ruby.jsf sed.jsf sh.jsf \
	sieve.jsf skill.jsf sml.jsf spec.jsf sql.jsf tcl.jsf tex.jsf \
	troff.jsf typescript.jsf verilog.jsf vhdl.jsf whitespace.jsf \
	xml.jsf yaml.jsf filename.jsf
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(data_syntaxdir)"
DATA = $(data_syntax_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/4gl.jsf.in $(srcdir)/Makefile.in \
	$(srcdir)/ada.jsf.in $(srcdir)/ant.jsf.in $(srcdir)/asm.jsf.in \
	$(srcdir)/awk.jsf.in $(srcdir)/batch.jsf.in $(srcdir)/c.jsf.in \
	$(srcdir)/cobol.jsf.in $(srcdir)/comment_todo.jsf.in \
	$(srcdir)/conf.jsf.in $(srcdir)/csh.jsf.in \
	$(srcdir)/csharp.jsf.in $(srcdir)/css.jsf.in \
	$(srcdir)/debian.jsf.in $(srcdir)/diff.jsf.in \
	$(srcdir)/elixir.jsf.in $(srcdir)/erb.jsf.in \
	$(srcdir)/erlang.jsf.in $(srcdir)/filename.jsf.in \
	$(srcdir)/fortran.jsf.in $(srcdir)/git-commit.jsf.in \
	$(srcdir)/go.jsf.in $(srcdir)/haml.jsf.in \
	$(srcdir)/haskell.jsf.in $(srcdir)/html.jsf.in \
	$(srcdir)/htmlerb.jsf.in $(srcdir)/ini.jsf.in \
	$(srcdir)/iptables.jsf.in $(srcdir)/java.jsf.in \
	$(srcdir)/joerc.jsf.in $(srcdir)/js.jsf.in \
	$(srcdir)/jsf.jsf.in $(srcdir)/jsf_check.jsf.in \
	$(srcdir)/json.jsf.in $(srcdir)/lisp.jsf.in \
	$(srcdir)/lua.jsf.in $(srcdir)/m4.jsf.in $(srcdir)/mail.jsf.in \
	$(srcdir)/mason.jsf.in $(srcdir)/matlab.jsf.in \
	$(srcdir)/md.jsf.in $(srcdir)/ocaml.jsf.in \
	$(srcdir)/pascal.jsf.in $(srcdir)/perl.jsf.in \
	$(srcdir)/php.jsf.in $(srcdir)/powershell.jsf.in \
	$(srcdir)/prolog.jsf.in $(srcdir)/properties.jsf.in \
	$(srcdir)/ps.jsf.in $(srcdir)/puppet.jsf.in \
	$(srcdir)/python.jsf.in $(srcdir)/rexx.jsf.in \
	$(srcdir)/ruby.jsf.in $(srcdir)/sed.jsf.in $(srcdir)/sh.jsf.in \
	$(srcdir)/sieve.jsf.in $(srcdir)/skill.jsf.in \
	$(srcdir)/sml.jsf.in $(srcdir)/spec.jsf.in \
	$(srcdir)/sql.jsf.in $(srcdir)/tcl.jsf.in $(srcdir)/tex.jsf.in \
	$(srcdir)/troff.jsf.in $(srcdir)/typescript.jsf.in \
	$(srcdir)/verilog.jsf.in $(srcdir)/vhdl.jsf.in \
	$(srcdir)/whitespace.jsf.in $(srcdir)/xml.jsf.in \
	$(srcdir)/yaml.jsf.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPELL = @SPELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
data_joedir = $(datadir)/joe
data_syntaxdir = $(data_joedir)/syntax
data_syntax_DATA = c.jsf perl.jsf verilog.jsf conf.jsf python.jsf php.jsf sh.jsf \
	mail.jsf pascal.jsf html.jsf vhdl.jsf fortran.jsf java.jsf xml.jsf tcl.jsf \
	lisp.jsf csh.jsf mason.jsf diff.jsf asm.jsf tex.jsf css.jsf ocaml.jsf \
	4gl.jsf sml.jsf sql.jsf awk.jsf cobol.jsf sed.jsf ps.jsf ada.jsf \
	troff.jsf haskell.jsf rexx.jsf skill.jsf lua.jsf ruby.jsf m4.jsf joerc.jsf \
	spec.jsf matlab.jsf jsf.jsf jsf_check.jsf csharp.jsf batch.jsf ini.jsf go.jsf \
	js.jsf json.jsf typescript.jsf ant.jsf comment_todo.jsf debian.jsf elixir.jsf \
	erb.jsf git-commit.jsf haml.jsf htmlerb.jsf iptables.jsf md.jsf prolog.jsf \
	properties.jsf sieve.jsf whitespace.jsf yaml.jsf erlang.jsf powershell.jsf \
	puppet.jsf filename.jsf

EXTRA_DIST = $(data_syntax_DATA)
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu syntax/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu syntax/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
4gl.jsf: $(top_builddir)/config.status $(srcdir)/4gl.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ada.jsf: $(top_builddir)/config.status $(srcdir)/ada.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ant.jsf: $(top_builddir)/config.status $(srcdir)/ant.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
asm.jsf: $(top_builddir)/config.status $(srcdir)/asm.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
awk.jsf: $(top_builddir)/config.status $(srcdir)/awk.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
batch.jsf: $(top_builddir)/config.status $(srcdir)/batch.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
c.jsf: $(top_builddir)/config.status $(srcdir)/c.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
cobol.jsf: $(top_builddir)/config.status $(srcdir)/cobol.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
comment_todo.jsf: $(top_builddir)/config.status $(srcdir)/comment_todo.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
conf.jsf: $(top_builddir)/config.status $(srcdir)/conf.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
csharp.jsf: $(top_builddir)/config.status $(srcdir)/csharp.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
csh.jsf: $(top_builddir)/config.status $(srcdir)/csh.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
css.jsf: $(top_builddir)/config.status $(srcdir)/css.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
debian.jsf: $(top_builddir)/config.status $(srcdir)/debian.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
diff.jsf: $(top_builddir)/config.status $(srcdir)/diff.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
elixir.jsf: $(top_builddir)/config.status $(srcdir)/elixir.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
erb.jsf: $(top_builddir)/config.status $(srcdir)/erb.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
erlang.jsf: $(top_builddir)/config.status $(srcdir)/erlang.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
fortran.jsf: $(top_builddir)/config.status $(srcdir)/fortran.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
git-commit.jsf: $(top_builddir)/config.status $(srcdir)/git-commit.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
go.jsf: $(top_builddir)/config.status $(srcdir)/go.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
haml.jsf: $(top_builddir)/config.status $(srcdir)/haml.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
haskell.jsf: $(top_builddir)/config.status $(srcdir)/haskell.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
html.jsf: $(top_builddir)/config.status $(srcdir)/html.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
htmlerb.jsf: $(top_builddir)/config.status $(srcdir)/htmlerb.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ini.jsf: $(top_builddir)/config.status $(srcdir)/ini.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
iptables.jsf: $(top_builddir)/config.status $(srcdir)/iptables.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
java.jsf: $(top_builddir)/config.status $(srcdir)/java.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
joerc.jsf: $(top_builddir)/config.status $(srcdir)/joerc.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
js.jsf: $(top_builddir)/config.status $(srcdir)/js.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
jsf_check.jsf: $(top_builddir)/config.status $(srcdir)/jsf_check.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
jsf.jsf: $(top_builddir)/config.status $(srcdir)/jsf.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
json.jsf: $(top_builddir)/config.status $(srcdir)/json.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
lisp.jsf: $(top_builddir)/config.status $(srcdir)/lisp.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
lua.jsf: $(top_builddir)/config.status $(srcdir)/lua.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
m4.jsf: $(top_builddir)/config.status $(srcdir)/m4.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
mail.jsf: $(top_builddir)/config.status $(srcdir)/mail.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
mason.jsf: $(top_builddir)/config.status $(srcdir)/mason.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
matlab.jsf: $(top_builddir)/config.status $(srcdir)/matlab.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
md.jsf: $(top_builddir)/config.status $(srcdir)/md.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ocaml.jsf: $(top_builddir)/config.status $(srcdir)/ocaml.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pascal.jsf: $(top_builddir)/config.status $(srcdir)/pascal.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
perl.jsf: $(top_builddir)/config.status $(srcdir)/perl.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
php.jsf: $(top_builddir)/config.status $(srcdir)/php.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
powershell.jsf: $(top_builddir)/config.status $(srcdir)/powershell.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
prolog.jsf: $(top_builddir)/config.status $(srcdir)/prolog.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
properties.jsf: $(top_builddir)/config.status $(srcdir)/properties.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ps.jsf: $(top_builddir)/config.status $(srcdir)/ps.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
puppet.jsf: $(top_builddir)/config.status $(srcdir)/puppet.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
python.jsf: $(top_builddir)/config.status $(srcdir)/python.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
rexx.jsf: $(top_builddir)/config.status $(srcdir)/rexx.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ruby.jsf: $(top_builddir)/config.status $(srcdir)/ruby.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
sed.jsf: $(top_builddir)/config.status $(srcdir)/sed.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
sh.jsf: $(top_builddir)/config.status $(srcdir)/sh.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
sieve.jsf: $(top_builddir)/config.status $(srcdir)/sieve.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
skill.jsf: $(top_builddir)/config.status $(srcdir)/skill.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
sml.jsf: $(top_builddir)/config.status $(srcdir)/sml.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
spec.jsf: $(top_builddir)/config.status $(srcdir)/spec.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
sql.jsf: $(top_builddir)/config.status $(srcdir)/sql.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
tcl.jsf: $(top_builddir)/config.status $(srcdir)/tcl.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
tex.jsf: $(top_builddir)/config.status $(srcdir)/tex.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
troff.jsf: $(top_builddir)/config.status $(srcdir)/troff.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
typescript.jsf: $(top_builddir)/config.status $(srcdir)/typescript.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
verilog.jsf: $(top_builddir)/config.status $(srcdir)/verilog.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
vhdl.jsf: $(top_builddir)/config.status $(srcdir)/vhdl.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
whitespace.jsf: $(top_builddir)/config.status $(srcdir)/whitespace.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
xml.jsf: $(top_builddir)/config.status $(srcdir)/xml.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
yaml.jsf: $(top_builddir)/config.status $(srcdir)/yaml.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
filename.jsf: $(top_builddir)/config.status $(srcdir)/filename.jsf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-data_syntaxDATA: $(data_syntax_DATA)
	@$(NORMAL_INSTALL)
	@list='$(data_syntax_DATA)'; test -n "$(data_syntaxdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(data_syntaxdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(data_syntaxdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(data_syntaxdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(data_syntaxdir)" || exit $$?; \
	done

uninstall-data_syntaxDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_syntax_DATA)'; test -n "$(data_syntaxdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(data_syntaxdir)'; $(am__uninstall_files_from_dir)
tags TAGS:

ctags CTAGS:

cscope cscopelist:

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(data_syntaxdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data_syntaxDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-data_syntaxDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic cscopelist-am \
	ctags-am distclean distclean-generic distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data_syntaxDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic pdf pdf-am ps ps-am tags-am uninstall \
	uninstall-am uninstall-data_syntaxDATA

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
